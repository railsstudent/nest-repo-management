var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.251,1,1.463]],["body/controllers/AppController.html",[0,1.782,1,1.413,2,0.786,3,0.498,4,0.424,5,0.424,6,1.309,7,1.087,8,2.2,9,1.669,10,2.533,11,2.033,12,0.357,13,1.413,14,2.533,15,2.533,16,1.648,17,1.957,18,2.044,19,2.012,20,0.059,21,2.533,22,1.208,23,1.648,24,2.023,25,3.686,26,3.133,27,1.413,28,0.765,29,1.413,30,2.533,31,2.75,32,2.75,33,1.648,34,2.533,35,1.648,36,3.368,37,2.75,38,2.012,39,0.892,40,2.084,41,0.581,42,1.531,43,1.309,44,0.498,45,0.549,46,1.309,47,1.309,48,1.648,49,2.012,50,1.648,51,1.413,52,1.648,53,1.648,54,1.648,55,1.648,56,0.019,57,0.029,58,0.019]],["title/modules/AppModule.html",[59,1.251,60,1.463]],["body/modules/AppModule.html",[1,1.966,2,1.845,3,0.622,4,0.53,5,0.53,7,0.726,8,1.669,20,0.059,39,1.596,41,0.726,42,1.757,43,1.637,44,0.622,45,0.447,56,0.023,57,0.034,58,0.023,59,1.96,60,2.527,61,1.681,62,0.983,63,1.358,64,1.358,65,0.983,66,2.707,67,1.358,68,1.637,69,1.637,70,1.637,71,2.045,72,1.972,73,1.358,74,1.358,75,2.06,76,2.992,77,3.524,78,2.06,79,2.992,80,3.524,81,1.637,82,2.322,83,2.992,84,2.06,85,1.637,86,2.992,87,1.637,88,0.622,89,2.06,90,2.06,91,2.06,92,2.06,93,2.06,94,2.06,95,2.06,96,2.06,97,2.06,98,2.06,99,1.637,100,2.06,101,2.06,102,2.06]],["title/injectables/AppService.html",[42,1.075,103,1.251]],["body/injectables/AppService.html",[3,0.537,4,0.458,5,0.458,7,1.139,8,1.498,11,1.77,12,0.386,13,1.498,17,1.933,18,2.01,20,0.059,22,1.281,24,2.072,25,3.351,26,3.655,27,1.498,28,0.811,29,1.498,31,3.53,32,2.861,36,3.53,37,3.228,38,2.133,39,0.627,40,1.804,41,0.627,42,1.101,44,0.537,45,0.386,49,2.133,51,1.498,56,0.02,57,0.03,58,0.02,103,1.281,104,1.173,105,1.414,106,2.685,107,2.685,108,2.685,109,1.78,110,4.064,111,2.133,112,1.77,113,2.685,114,1.78,115,1.78,116,1.78,117,1.78]],["title/classes/CreateUserDto.html",[45,0.569,118,1.251]],["body/classes/CreateUserDto.html",[3,0.724,4,0.616,5,0.616,12,0.52,17,1.847,18,1.366,20,0.059,22,1.976,28,1.423,39,0.844,44,0.724,45,0.723,46,1.904,56,0.027,57,0.038,58,0.027,88,1.25,118,1.59,119,2.396,120,3.457,121,1.904,122,2.396,123,2.196,124,3.457,125,3.289,126,3.045,127,3.289,128,2.525,129,2.396,130,2.396,131,2.396,132,2.396,133,1.579,134,1.579,135,1.904,136,2.137,137,1.904]],["title/interfaces/User.html",[88,0.792,138,1.463]],["body/interfaces/User.html",[3,0.673,4,0.573,5,0.573,12,0.483,17,1.999,18,1.298,20,0.059,28,1.329,44,0.956,56,0.025,57,0.036,58,0.025,88,1.211,123,2.086,124,3.496,125,3.365,126,3.182,127,3.365,128,2.642,135,1.77,137,1.77,138,1.243,139,2.228,140,1.468,141,2.9,142,4.009,143,1.77,144,2.515,145,2.515,146,2.515,147,2.228,148,1.77,149,4.235,150,4.009]],["title/controllers/UserController.html",[0,1.251,151,1.463]],["body/controllers/UserController.html",[0,1.323,2,0.886,3,0.561,4,0.477,5,0.477,7,0.654,11,2.186,12,0.403,13,1.546,17,1.36,18,1.136,19,2.635,20,0.06,22,1.583,24,1.97,27,1.546,28,0.837,29,1.546,39,1.296,40,1.85,41,0.654,44,0.561,45,0.601,47,1.475,51,1.85,56,0.021,57,0.031,58,0.021,88,1.328,118,1.755,133,1.224,134,2.721,136,2.052,141,1.827,151,1.546,152,1.475,153,1.857,154,3.571,155,2.772,156,2.202,157,3.679,158,1.857,159,3.317,160,1.857,161,2.721,162,1.475,163,2.772,164,1.857,165,2.922,166,2.772,167,1.857,168,1.857,169,1.36,170,1.475,171,1.857,172,1.857,173,1.857,174,1.857,175,1.857,176,1.857]],["title/modules/UserModule.html",[59,1.251,71,1.251]],["body/modules/UserModule.html",[2,1.688,3,0.79,4,0.673,5,0.673,7,0.921,20,0.058,39,1.413,41,0.921,44,0.79,45,0.567,56,0.03,57,0.04,58,0.03,59,2.141,61,1.248,62,1.248,63,1.723,64,1.723,65,1.248,66,2.642,67,2.642,71,2.257,72,2.332,73,1.723,74,1.723,88,1.297,151,2.237,169,2.054,170,2.078,177,2.078,178,2.078,179,2.078,180,2.615,181,3.538,182,3.538,183,2.615]],["title/injectables/UserService.html",[103,1.251,169,1.075]],["body/injectables/UserService.html",[3,0.55,4,0.469,5,0.469,7,0.642,12,0.395,13,1.525,17,1.345,18,1.121,20,0.059,22,1.739,24,1.863,27,1.525,28,1.101,29,1.525,39,1.284,40,1.525,41,0.642,44,0.55,45,0.395,51,1.525,56,0.021,57,0.031,58,0.021,88,1.376,103,1.305,104,1.201,118,1.739,123,1.802,133,1.201,134,2.702,136,2.179,141,2.162,154,3.554,156,2.172,161,2.402,162,2.172,165,3.378,169,1.121,184,1.448,185,3.281,186,2.734,187,3.645,188,2.734,189,1.823,190,1.823,191,1.823,192,2.734,193,1.823,194,2.734,195,2.734,196,2.734,197,1.448,198,1.823,199,1.823,200,1.823,201,1.823,202,1.823,203,2.734,204,2.734,205,1.823]],["title/coverage.html",[206,2.336]],["body/coverage.html",[0,1.713,1,1.491,5,0.688,6,2.124,20,0.057,28,0.807,42,1.096,45,0.58,56,0.03,57,0.041,58,0.03,65,1.275,82,1.762,88,0.807,103,1.713,105,2.124,118,1.275,120,2.124,121,2.124,136,1.491,138,1.491,140,1.762,151,1.491,152,2.124,169,1.096,184,2.124,206,1.762,207,2.673,208,2.673,209,2.673,210,4.656,211,3.591,212,3.443,213,4.334,214,4.334,215,2.124,216,2.124,217,2.124,218,2.124,219,2.673,220,4.334,221,2.673,222,2.673,223,2.673,224,2.673,225,2.673,226,2.673,227,2.673,228,2.673]],["title/dependencies.html",[62,1.5,229,2.207]],["body/dependencies.html",[20,0.059,41,1.109,56,0.036,57,0.045,58,0.036,62,1.502,81,2.502,85,2.502,87,2.502,197,2.502,230,4.39,231,3.149,232,3.149,233,3.149,234,3.149,235,3.149,236,3.149,237,3.149,238,3.149,239,3.149,240,3.149,241,2.502,242,3.149,243,3.149,244,3.149,245,3.149,246,3.149,247,3.149,248,3.149,249,3.149,250,3.149]],["title/miscellaneous/enumerations.html",[251,0.905,252,2.498]],["body/miscellaneous/enumerations.html",[12,0.767,20,0.056,56,0.04,57,0.049,58,0.04,112,3.049,126,3.049,140,2.331,143,2.81,144,3.413,145,3.413,146,3.413,251,1.45,252,2.81,253,3.538]],["title/miscellaneous/functions.html",[251,0.905,254,2.498]],["body/miscellaneous/functions.html",[12,0.815,20,0.054,24,1.793,56,0.043,57,0.051,58,0.043,65,2.265,161,2.477,218,2.986,251,1.541,254,2.986,255,3.759]],["title/index.html",[12,0.479,256,2.207,257,2.207]],["body/index.html",[4,0.642,7,0.879,8,1.392,20,0.057,56,0.028,57,0.039,58,0.028,206,1.645,258,2.496,259,2.496,260,3.427,261,2.496,262,2.496,263,2.496,264,2.496,265,2.496,266,2.496,267,3.914,268,2.496,269,2.496,270,2.496,271,2.496,272,4.672,273,2.496,274,2.496,275,4.562,276,2.496,277,2.496,278,3.427,279,2.496,280,2.496,281,2.496,282,2.496,283,3.427,284,3.427,285,2.496,286,2.496,287,2.496,288,3.427,289,3.427,290,2.496,291,2.496,292,2.496,293,2.496,294,2.496,295,1.983,296,2.496,297,2.496,298,2.496,299,2.496,300,2.496,301,2.496,302,2.496,303,2.496,304,2.496,305,2.496,306,2.496,307,2.496,308,2.496,309,2.496,310,2.496,311,2.496,312,2.496,313,2.496]],["title/modules.html",[61,1.691]],["body/modules.html",[20,0.051,56,0.043,57,0.051,58,0.043,60,2.097,61,1.793,71,1.793,295,3.539,314,4.455,315,4.455,316,4.455]],["title/overview.html",[317,2.816]],["body/overview.html",[2,1.414,20,0.054,42,1.748,45,0.643,56,0.034,57,0.044,58,0.034,59,1.414,60,2.673,61,1.414,62,1.414,63,1.953,64,1.953,65,1.414,66,1.953,67,1.953,68,2.354,69,2.354,70,2.354,71,2.286,72,2.533,73,1.953,74,1.953,104,1.953,138,1.653,169,1.999,177,2.354,178,2.354,179,2.354,317,2.354,318,4.265,319,3.053]],["title/miscellaneous/variables.html",[251,0.905,320,2.498]],["body/miscellaneous/variables.html",[12,0.607,20,0.057,28,1.252,56,0.032,57,0.042,58,0.032,82,2.439,99,2.222,111,3.507,112,2.909,128,2.909,148,2.222,212,2.222,215,3.507,216,2.94,217,2.94,241,2.222,251,1.147,319,2.222,320,2.222,321,4.414,322,2.798,323,2.798,324,2.798,325,2.798,326,2.798,327,2.798,328,2.798,329,2.798,330,2.798,331,2.798,332,2.798,333,3.701,334,2.798,335,2.798,336,2.798,337,2.798,338,2.798,339,2.798,340,2.798]],["title/routes.html",[9,2.336]],["body/routes.html",[9,2.642,20,0.052,56,0.045,57,0.052,58,0.045]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":319,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.4",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["17.4.0",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":318,"title":{},"body":{"overview.html":{}}}],["20",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["4.6.0",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.6",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.6.15",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["adduser",{"_index":186,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(dto",{"_index":188,"title":{},"body":{"injectables/UserService.html":{}}}],["age",{"_index":124,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{}}}],["amazing",{"_index":296,"title":{},"body":{"index.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"index.html":{}}}],["app.controller",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":266,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":60,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":42,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":154,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["author",{"_index":306,"title":{},"body":{"index.html":{}}}],["backers",{"_index":297,"title":{},"body":{"index.html":{}}}],["binary",{"_index":146,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["body",{"_index":168,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":316,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":314,"title":{},"body":{"modules.html":{}}}],["building",{"_index":261,"title":{},"body":{"index.html":{}}}],["ceate",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":45,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["cluster_appmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":177,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":178,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":179,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collection",{"_index":195,"title":{},"body":{"injectables/UserService.html":{}}}],["compression",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('throttle_limit",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('throttle_ttl",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":202,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('user",{"_index":171,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":206,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{}}}],["createuser",{"_index":155,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":175,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(dto",{"_index":158,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":118,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["declarations",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":62,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["development",{"_index":274,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":207,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":134,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":285,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":262,"title":{},"body":{"index.html":{}}}],["enum",{"_index":143,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":252,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environmen",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envschema",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error('method",{"_index":200,"title":{},"body":{"injectables/UserService.html":{}}}],["example",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["export",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["female",{"_index":145,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":135,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{}}}],["firstname",{"_index":125,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{}}}],["framework",{"_index":260,"title":{},"body":{"index.html":{}}}],["function",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":254,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":126,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["get(':id",{"_index":163,"title":{},"body":{"controllers/UserController.html":{}}}],["get('all",{"_index":166,"title":{},"body":{"controllers/UserController.html":{}}}],["get('good/:greeting/:name",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["get('hello/:name",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["getall",{"_index":187,"title":{},"body":{"injectables/UserService.html":{}}}],["getgood",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["getgood(greeting",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["getgoodname",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["getgoodname(@param('greeting",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["getgoodname(greeting",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["gethello(name",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["gethelloname",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["gethelloname(@param('name",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["gethelloname(name",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":256,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":156,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuser(@param('id",{"_index":173,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(id",{"_index":162,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getusers",{"_index":157,"title":{},"body":{"controllers/UserController.html":{}}}],["good",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["greeting",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["greeting='morning",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["greeting}${person",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["grow",{"_index":292,"title":{},"body":{"index.html":{}}}],["hello",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helmet",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":303,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":310,"title":{},"body":{"index.html":{}}}],["id",{"_index":141,"title":{},"body":{"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":208,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":201,"title":{},"body":{"injectables/UserService.html":{}}}],["import",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":103,"title":{"injectables/AppService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":104,"title":{},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":271,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":273,"title":{},"body":{"index.html":{}}}],["interface",{"_index":138,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":139,"title":{},"body":{"interfaces/User.html":{}}}],["internal",{"_index":194,"title":{},"body":{"injectables/UserService.html":{}}}],["ips",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["joi",{"_index":241,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["joi.number().default(num_ips",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(window_size",{"_index":326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":299,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":307,"title":{},"body":{"index.html":{}}}],["last",{"_index":137,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{}}}],["lastname",{"_index":127,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{}}}],["legend",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":313,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":289,"title":{},"body":{"index.html":{}}}],["limit",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["male",{"_index":144,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["metadata",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minute",{"_index":215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":251,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":288,"title":{},"body":{"index.html":{}}}],["mode",{"_index":278,"title":{},"body":{"index.html":{}}}],["module",{"_index":59,"title":{"modules/AppModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":61,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":302,"title":{},"body":{"index.html":{}}}],["morning",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["myśliwiec",{"_index":308,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["name='world",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["nest",{"_index":267,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":312,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":136,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newuser",{"_index":203,"title":{},"body":{"injectables/UserService.html":{}}}],["node.js",{"_index":259,"title":{},"body":{"index.html":{}}}],["npm",{"_index":272,"title":{},"body":{"index.html":{}}}],["null",{"_index":142,"title":{},"body":{"interfaces/User.html":{}}}],["num_ips",{"_index":216,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":128,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":148,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":290,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":317,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":229,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["param('name",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["person",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["please",{"_index":300,"title":{},"body":{"index.html":{}}}],["port",{"_index":323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":159,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":153,"title":{},"body":{"controllers/UserController.html":{}}}],["private",{"_index":185,"title":{},"body":{"injectables/UserService.html":{}}}],["production",{"_index":280,"title":{},"body":{"index.html":{}}}],["profile",{"_index":182,"title":{},"body":{"modules/UserModule.html":{}}}],["progressive",{"_index":258,"title":{},"body":{"index.html":{}}}],["project",{"_index":291,"title":{},"body":{"index.html":{}}}],["promise",{"_index":161,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["promise.resolve(newuser",{"_index":205,"title":{},"body":{"injectables/UserService.html":{}}}],["promise.resolve(this.users",{"_index":198,"title":{},"body":{"injectables/UserService.html":{}}}],["promiselike",{"_index":192,"title":{},"body":{"injectables/UserService.html":{}}}],["properties",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["property",{"_index":149,"title":{},"body":{"interfaces/User.html":{}}}],["provide",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["providers",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["rate",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":301,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["repository",{"_index":270,"title":{},"body":{"index.html":{}}}],["requests",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["results",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["routes",{"_index":9,"title":{"routes.html":{}},"body":{"controllers/AppController.html":{},"routes.html":{}}}],["run",{"_index":275,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":263,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":264,"title":{},"body":{"index.html":{}}}],["service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{}}}],["side",{"_index":265,"title":{},"body":{"index.html":{}}}],["size",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":294,"title":{},"body":{"index.html":{}}}],["src/.../envschema.ts",{"_index":321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../types.ts",{"_index":253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:26",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:40",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:16",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:29",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["src/envschema.ts",{"_index":212,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/create",{"_index":120,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/types.ts",{"_index":140,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/user/user.controller.ts",{"_index":152,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:22",{"_index":167,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:31",{"_index":164,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:41",{"_index":160,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":180,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":184,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:12",{"_index":193,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:18",{"_index":190,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":191,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:36",{"_index":189,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":276,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":279,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":281,"title":{},"body":{"index.html":{}}}],["started",{"_index":257,"title":{"index.html":{}},"body":{}}],["starter",{"_index":269,"title":{},"body":{"index.html":{}}}],["statements",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":304,"title":{},"body":{"index.html":{}}}],["stores",{"_index":181,"title":{},"body":{"modules/UserModule.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["support",{"_index":295,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":315,"title":{},"body":{"modules.html":{}}}],["table",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":284,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":287,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":286,"title":{},"body":{"index.html":{}}}],["tests",{"_index":283,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":293,"title":{},"body":{"index.html":{}}}],["thing",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["this.appservice.getgood(greeting",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello(name",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["this.service.adduser(dto",{"_index":176,"title":{},"body":{"controllers/UserController.html":{}}}],["this.service.getall",{"_index":172,"title":{},"body":{"controllers/UserController.html":{}}}],["this.service.getuser(id",{"_index":174,"title":{},"body":{"controllers/UserController.html":{}}}],["this.users",{"_index":204,"title":{},"body":{"injectables/UserService.html":{}}}],["throttle_limit",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throttle_ttl",{"_index":325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throttlerguard",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forrootasync",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":199,"title":{},"body":{"injectables/UserService.html":{}}}],["touch",{"_index":305,"title":{},"body":{"index.html":{}}}],["true",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["ttl",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":311,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedef",{"_index":147,"title":{},"body":{"interfaces/User.html":{}}}],["types",{"_index":133,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["types/compression",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":268,"title":{},"body":{"index.html":{}}}],["unit",{"_index":282,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":88,"title":{"interfaces/User.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":150,"title":{},"body":{"interfaces/User.html":{}}}],["user.controller",{"_index":183,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto.ts",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":130,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":132,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":129,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":131,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.service",{"_index":170,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":151,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":71,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":165,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":169,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":197,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["v4",{"_index":196,"title":{},"body":{"injectables/UserService.html":{}}}],["validate",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationschema",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["value",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":320,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":277,"title":{},"body":{"index.html":{}}}],["website",{"_index":309,"title":{},"body":{"index.html":{}}}],["window",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window_size",{"_index":217,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["world",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["yes",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["you'd",{"_index":298,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                App Controller that routes requests to app service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGoodName\n                            \n                            \n                                getHelloName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGoodName\n                        \n                        \n                    \n                \n            \n            \n                \ngetGoodName(greeting: string, name?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('good/:greeting/:name?')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:40\n                \n            \n\n\n            \n                \n                    Returns a greeting to a person\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    greeting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ngreeting to the person\n\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nname of the person\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        'Good greeting!' or 'Good greeting, name!' when greeting and name are provided\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHelloName\n                        \n                        \n                    \n                \n            \n            \n                \ngetHelloName(name?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello/:name?')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:26\n                \n            \n\n\n            \n                \n                    Returns Hello World! or Hello name!\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nname of the thing\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        'Hello World!' or 'Hello  name!' when name is provided\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common'\nimport { AppService } from './app.service'\n\n/**\n *  App Controller that routes requests to app service\n */\n@Controller()\nexport class AppController {\n  /**\n   * Create App Controller\n   *\n   * @param appService {AppService} - app service class\n   *\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Returns Hello World! or Hello name!\n   *\n   * @param {string} name - name of the thing\n   * @returns 'Hello World!' or 'Hello  name!' when name is provided\n   *\n   * @public\n   */\n  @Get('hello/:name?')\n  getHelloName(@Param('name') name?: string): string {\n    return this.appService.getHello(name)\n  }\n\n  /**\n   * Returns a greeting to a person\n   *\n   * @param {string} greeting - greeting to the person\n   * @param {string} name - name of the person\n   * @returns 'Good greeting!' or 'Good greeting, name!' when greeting and name are provided\n   *\n   * @public\n   */\n  @Get('good/:greeting/:name?')\n  getGoodName(@Param('greeting') greeting: string, @Param('name') name?: string): string {\n    return this.appService.getGood(greeting, name)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            App module that registers controllers, providers and other modules\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { envSchema } from './envSchema'\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler'\nimport { APP_GUARD } from '@nestjs/core'\nimport { UserModule } from './user'\n\n/**\n * App module that registers controllers, providers and other modules\n *\n */\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: envSchema,\n    }),\n    ThrottlerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        ttl: config.get('THROTTLE_TTL'),\n        limit: config.get('THROTTLE_LIMIT'),\n      }),\n    }),\n    UserModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                App service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGood\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGood\n                        \n                        \n                    \n                \n            \n            \n                \ngetGood(greeting: string, person: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:29\n                \n            \n\n\n            \n                \n                    Returns Good Morning! or Good name!\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    greeting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Morning'\n                                    \n\n                                    \n                                        \ngreeting to the person\n\n\n                                    \n                                \n                                \n                                    person\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        \nname of the person\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        'Good Morning!' or 'Good greeting, name!' when greeting and person are provided\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:16\n                \n            \n\n\n            \n                \n                    Returns Hello World! or Hello name!\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'World'\n                                    \n\n                                    \n                                        \nname of the thing\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        'Hello World!' or 'Hello  name!' when name is provided\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n/**\n * App service\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Returns Hello World! or Hello name!\n   *\n   * @param {string} [name='World']  - name of the thing\n   * @returns 'Hello World!' or 'Hello  name!' when name is provided\n   *\n   * @public\n   */\n  getHello(name = 'World'): string {\n    return `Hello ${name}!`\n  }\n\n  /**\n   * Returns Good Morning! or Good name!\n   *\n   * @param {string} [greeting='Morning'] - greeting to the person\n   * @param {string} [person=''] - name of the person\n   * @returns 'Good Morning!' or 'Good greeting, name!' when greeting and person are provided\n   *\n   * @public\n   */\n  getGood(greeting = 'Morning', person = ''): string {\n    return `Good ${greeting}${person ? `, ${person}` : ''}!`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                firstname\n                            \n                            \n                                gender\n                            \n                            \n                                lastname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Gender } from '../types'\n\n/**\n * @class  Create User DTO\n */\nexport class CreateUserDto {\n /**\n  *  @type {string} firstname - first name of new user\n  */\n  firstname: string\n\n   /**\n  *  @type {string} lastname - last name of new user\n  */\n  lastname: string\n\n /**\n  * @type {number} age - age of new user\n  */\n  age: number\n\n /**\n  *  @type {Gender}\n  */\n  gender: Gender\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        firstname\n                                \n                                \n                                        gender\n                                \n                                \n                                        id\n                                \n                                \n                                        lastname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum Gender {\n  MALE = 'Male',\n  FEMALE = 'Female',\n  BINARY = 'Binary',\n}\n\n/**\n * @typedef User\n * @type {object}\n * @property {string | null} id - user id.\n * @property {string} firstname - user's first name.\n * @property {string} lastname - user's last name.\n * @property {number} age - user's age\n * @property {gender} gender - user's gender\n */\nexport interface User {\n  id: string | null\n  firstname: string\n  lastname: string\n  age: number\n  gender: Gender\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nDTO of new user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        the new user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        all the users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        all the users\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common'\nimport { CreateUserDto } from './dto'\nimport { User } from './types'\nimport { UserService } from './user.service'\n\n/**\n * @class\n * User controller\n */\n@Controller('user')\nexport class UserController {\n  /**\n   * @param service {UserService} - user service\n   */\n  constructor(private service: UserService) {}\n\n  /**\n   *\n   * @returns   all the users\n   */\n  @Get('all')\n  async getUsers(): Promise {\n    return this.service.getAll()\n  }\n\n  /**\n   *\n   * @returns   all the users\n   */\n     @Get(':id')\n     async getUser(@Param('id') id: string): Promise {\n       return this.service.getUser(id)\n     }\n\n  /**\n   *\n   * @param dto - DTO of new user\n   * @returns the new user\n   */\n  @Post()\n  async createUser(@Body() dto: CreateUserDto): Promise {\n    return this.service.addUser(dto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n        \n            Description\n        \n        \n            User module that stores user profile\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\n\n/**\n * User module that stores user profile\n */\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DTO of the new user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        the new user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        all users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | PromiseLike\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                        internal collection of users\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateUserDto } from './dto'\nimport { User } from './types'\nimport { v4 } from 'uuid'\n\n@Injectable()\nexport class UserService {\n  /**\n   * internal collection of users\n   * @type {User}\n   */\n  private users: User[]\n\n  /**\n   *\n   * @returns  all users\n   */\n  async getAll(): Promise {\n    return Promise.resolve(this.users)\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async getUser(id: string): User[] | PromiseLike {\n    throw new Error('Method not implemented.')\n  }\n\n\n  /**\n   *\n   * @param dto DTO of the new user\n   * @returns   the new user\n   */\n  async addUser(dto: CreateUserDto): Promise {\n    const newUser: User = {\n      ...dto,\n      id: v4(),\n    }\n    this.users = [...this.users, newUser]\n    return Promise.resolve(newUser)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/envSchema.ts\n            \n            variable\n            envSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/envSchema.ts\n            \n            variable\n            MINUTE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/envSchema.ts\n            \n            variable\n            NUM_IPS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/envSchema.ts\n            \n            variable\n            WINDOW_SIZE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/types.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                20 %\n                (1/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/throttler : ^1.1.4\n        \n            @types/compression : ^1.7.0\n        \n            compression : ^1.7.4\n        \n            helmet : ^4.6.0\n        \n            joi : ^17.4.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            uuid : ^8.3.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Gender   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                    \n                        \n                            Gender enum\n\n                        \n                    \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : Male\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : Female\n                            \n                        \n                        \n                            \n                                 BINARY\n                            \n                        \n                        \n                            \n                                Value : Binary\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            envSchema   (src/.../envSchema.ts)\n                        \n                        \n                            MINUTE   (src/.../envSchema.ts)\n                        \n                        \n                            NUM_IPS   (src/.../envSchema.ts)\n                        \n                        \n                            WINDOW_SIZE   (src/.../envSchema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/envSchema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object({\n  PORT: Joi.number().required(),\n  THROTTLE_TTL: Joi.number().default(WINDOW_SIZE * MINUTE),\n  THROTTLE_LIMIT: Joi.number().default(NUM_IPS),\n})\n                        \n                    \n\n                \n                    \n                        Ceate Joi object to validate environmen files\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MINUTE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n\n                \n                    \n                        1 minute has 60 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUM_IPS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n\n                \n                    \n                        Number of IPS\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WINDOW_SIZE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n                \n                    \n                        rate limit window size\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
